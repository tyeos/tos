[SECTION .data]
R3_CODE_GDT_ENTRY_INDEX equ 5
R3_DATA_GDT_ENTRY_INDEX equ 6

R3_CODE_SELECTOR equ R3_CODE_GDT_ENTRY_INDEX << 3 | 0b011
R3_DATA_SELECTOR equ R3_DATA_GDT_ENTRY_INDEX << 3 | 0b011

[SECTION .text]
[bits 32]

extern alloc_upage ; 在c中定义，分配用户页
extern user_entry ; 在c中定义，模拟的用户程序入口
extern update_tss_esp ; 在c中定义，更新tss的栈

; ---------------------------------------------------------------------------------------
; 这里是临时程序，目的是从r0内核特权级跳转到r3用户特权级
; ---------------------------------------------------------------------------------------
global move_to_user_mode
move_to_user_mode:
    ; ---------------------------------------------------------------------------------------
    ; 手动模拟切换到用户态，使用中断返回的方式，即从这里出去之后，就不再从这里回来了
    ; ---------------------------------------------------------------------------------------
    ; 要构建的栈结构：
    ; ---------------------------------------------------------------------------------------
    ;     eip          ↑ 低地址（ <-esp 最终栈顶）
    ;     cs           ↑
    ;     eflags       ↑ （栈的增长方向）
    ;     esp          ↑
    ;     ss           ↑ 高地址
    ; ---------------------------------------------------------------------------------------
    ; 新申请4KB的空间给用户进程
    ; 使用r3级别的代码段和数据段选择子
    ; ---------------------------------------------------------------------------------------

    call alloc_upage
    add eax, 0x1000

    ; 到用户特权级前更新tss
    push eax
    call update_tss_esp

    ; 跳转
    push R3_DATA_SELECTOR ; ss
    push eax              ; esp
    pushfd                ; eflags
    push R3_CODE_SELECTOR ; cs
    push user_entry       ; eip
    iret